// generated by Fast Light User Interface Designer (fluid) version 1.0302

#include "TouchScreen_horizontal.h"

#define NEW_TS_STRATEGE

static int sta_no = 0;
static	char *station_name = NULL;

Fl_Window *screen_window=(Fl_Window *)0;
Fl_Wizard *sw_1=(Fl_Wizard *)0;
Fl_Wizard *wz_window_view=(Fl_Wizard *)0;
Fl_Group *cd_main_group=(Fl_Group *)0;
Fl_Group *cd_gp_live=(Fl_Group *)0;
Fl_Tile *key_request=(Fl_Tile *)0;
Fl_Tile *information=(Fl_Tile *)0;
Fl_Tile *start_station=(Fl_Tile *)0;
Fl_Tile *end_station=(Fl_Tile *)0;
Fl_Tile *current_station=(Fl_Tile *)0;
Fl_Tile *next_station=(Fl_Tile *)0;
Fl_Tile *open_door=(Fl_Tile *)0;
Fl_Tile *end_value=(Fl_Tile *)0;
Fl_Tile *start_value=(Fl_Tile *)0;
Fl_Tile *open_value=(Fl_Tile *)0;
Fl_Tile *next_value=(Fl_Tile *)0;
Fl_Tile *current_value=(Fl_Tile *)0;
Fl_Tile *pcu_recept=(Fl_Tile *)0;
Fl_Tile *pcu_value=(Fl_Tile *)0;
Fl_Wizard *sw_2=(Fl_Wizard *)0;
Fl_Tile *key_request_1 = (Fl_Tile *)0;
Fl_Tile *information_1 = (Fl_Tile *)0;
Fl_Group *cd_gp_intercomm=(Fl_Group *)0;
Fl_Wizard *cd_wz_window_view=(Fl_Wizard *)0;
int switchFlag;


int touch_screen_main() {
char temp_name[20];
{  screen_window = new Fl_Window(480, 360, "display");
   {
   	wz_window_view = new Fl_Wizard(0, 0, 480, 360);
	{ cd_main_group = new Fl_Group(0, 0, 480, 360);
	  cd_main_group->hide();
	  { //key_request = new Fl_Tile(20, 20, 79, 25, "\350\257\267\346\217\222\345\205\245\351\222\245\345\214\231");
	  	key_request = new Fl_Tile(20, 20, 79, 25, "           \346\254\242\350\277\216\344\271\230\345\235\220\346\210\220\351\203\2757\345\217\267\347\272\277");
	 	key_request->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE |FL_ALIGN_WRAP));
		key_request->end();
	  } // Fl_Tile* key_request
	  { information = new Fl_Tile(20, 80, 87, 25, "\345\210\227\350\275\246\350\277\220\350\220\245\344\277\241\346\201\257");
	  	information->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE |FL_ALIGN_WRAP));
		information->end();
	  } // Fl_Tile* information
	  { start_station = new Fl_Tile(20, 135, 55, 25, "\350\265\267\347\202\271\347\253\231"); //
	    start_station->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE |FL_ALIGN_WRAP));
		start_station->end();
	  } // Fl_Tile* start_station
	  { end_station = new Fl_Tile(230, 135, 55, 25, "\347\273\210\347\202\271\347\253\231");
	    end_station->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE |FL_ALIGN_WRAP));
		end_station->end();
	  } // Fl_Tile* end_station
	  { current_station = new Fl_Tile(20, 190, 55, 25, "\345\275\223\345\211\215\347\253\231");
	    current_station->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE |FL_ALIGN_WRAP));
		current_station->end();
	  } // Fl_Tile* current_station
	  { next_station = new Fl_Tile(230, 190, 55, 25, "\344\270\213\344\270\200\347\253\231");
	    next_station->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE |FL_ALIGN_WRAP));
		next_station->end();
	  } // Fl_Tile* next_station
	  { open_door = new Fl_Tile(20, 245, 55, 25, "\345\274\200\351\227\250\344\276\247");
	    open_door->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE |FL_ALIGN_WRAP));
		open_door->end();
	  } // Fl_Tile* open_door
	  { start_value = new Fl_Tile(110, 135, 55, 25);
	 	start_value->align(FL_ALIGN_WRAP);
		start_value->end();
	  } // Fl_Tile* start_value
	  { end_value = new Fl_Tile(320, 135, 55, 25);
	 	end_value->align(FL_ALIGN_WRAP);
		end_value->end();
	  } // Fl_Tile* end_value
	  { current_value = new Fl_Tile(110, 190, 55, 25);
	  	current_value->align(FL_ALIGN_WRAP);
		current_value->end();
	  } // Fl_Tile* current_value
	  { next_value = new Fl_Tile(320, 190, 55, 25);
	  	next_value->align(FL_ALIGN_WRAP);
		next_value->end();
	  } // Fl_Tile* next_value
	  { open_value = new Fl_Tile(110, 245, 55, 25);
	  	open_value->align(FL_ALIGN_WRAP);
		open_value->end();
	  } // Fl_Tile* open_value
	  { pcu_recept = new Fl_Tile(230, 245, 55, 25);
	  	pcu_recept->align(FL_ALIGN_WRAP);
		pcu_recept->end();
	  } // Fl_Tile* pcu_request
	  { pcu_value = new Fl_Tile(300, 245, 55, 25);
	  	pcu_value->align(FL_ALIGN_WRAP);
		pcu_value->end();
	  } // Fl_Tile* pcu_request
	  cd_main_group->hide();
	  cd_main_group->end();
	  Fl_Group::current()->resizable(cd_main_group);
	}
   }
	/*
	{  cd_gp_live= new Fl_Group(0, 0, 480, 320);
	   { Fl_Tile* o = new Fl_Tile(10, 11, 65, 52, "\xE5\x8F\xA3\xE6\x92\xAD");
          o->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          o->end();
       } 
	  cd_gp_live->end();
	}
	{ cd_gp_intercomm = new Fl_Group(0, 0, 480, 320);
	  { 
	   { Fl_Tile* o = new Fl_Tile(10, 11, 65, 52, "\xE5\xAF\xB9\xE8\xAE\xB2");
          o->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          o->end();
       } 
	  } 
	  cd_gp_intercomm->end();
	}
	*/
	screen_window->end();
	screen_window->resizable(screen_window);
  } // Fl_Window* screen_window
	screen_window->show();
#ifdef NEW_TS_STRATEGE
	while (Fl::wait())
	{
		if(switchFlag != 0)
		{
			  if(switchFlag == 1) ///<
			  {
				  TouchScreenShowRegionInfo();
				  switchFlag = 0;
			  }else if(switchFlag == 2) ///<
			  {
			  	  TouchScreenShowRegionInfo();
				  TouchScreenShowSatationInfo();
				  switchFlag = 0;
			  }else if(switchFlag == 3)
			  {
				  ShowPCUInfo();
				  switchFlag = 0;
			  }else 
			  {
				 switchFlag = 0;
			  }
		}
	}	  
#else
   return Fl::run();
#endif
}

void TouchScreenMain(int a, int b) {
    touch_screen_main();
}
